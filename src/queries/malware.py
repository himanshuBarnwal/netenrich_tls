

mal_query = """

    SELECT "url_count" AS ioc_type, COUNT(*) AS count FROM tls.edges
    WHERE edge_name = @url_count
    AND from_ver = @ioc_value 
    AND TIMESTAMP_MILLIS(edge_last_seen) 
    BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY) AND CURRENT_TIMESTAMP()

    UNION ALL

    SELECT "fqdn_count" AS ioc_type, COUNT(*) AS count FROM tls.edges
    WHERE edge_name = @fqdn_count
    AND from_ver = @ioc_value 
    AND TIMESTAMP_MILLIS(edge_last_seen) 
    BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY) AND CURRENT_TIMESTAMP()

    UNION ALL
    
    SELECT "ip_count" AS ioc_type, COUNT(*) AS count FROM tls.edges
    WHERE edge_name = @ip_count
    AND from_ver = @ioc_value 
    AND TIMESTAMP_MILLIS(edge_last_seen) 
    BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY) AND CURRENT_TIMESTAMP()

    UNION ALL
    
    SELECT "identity_count" AS ioc_type, COUNT(*) AS count FROM tls.edges WHERE edge_name = @identity_count AND from_ver = @ioc_value

    UNION ALL
    
    SELECT "industry_count" AS ioc_type, COUNT(*) AS count FROM tls.edges WHERE edge_name = @industry_count AND from_ver = @ioc_value

    UNION ALL
    
    SELECT "vuln_count" AS ioc_type, COUNT(*) AS count FROM tls.edges WHERE edge_name = @vuln_count AND from_ver = @ioc_value

    UNION ALL
    
    SELECT "malware_drops_count" AS ioc_type, COUNT(*) AS count FROM tls.edges WHERE edge_name = @malware_drops_count AND from_ver = @ioc_value

    UNION ALL
    
    SELECT "attack_vector_count" AS ioc_type, COUNT(*) AS count FROM tls.edges WHERE edge_name = @attack_vector_count AND from_ver = @ioc_value

    UNION ALL
    
    SELECT "threatactor_count" AS ioc_type, COUNT(*) AS count FROM tls.edges WHERE edge_name = @threatactor_count AND to_ver = @ioc_value;

    
    WITH search_graph_url AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, to_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE from_ver = @ioc_value AND edge_name = @urls
        ) WHERE TIMESTAMP_MILLIS(last_seen) BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY) AND CURRENT_TIMESTAMP() ORDER BY last_seen DESC LIMIT 25
    ),
    search_graph_fqdn AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, to_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE from_ver = @ioc_value AND edge_name = @fqdns
        ) WHERE TIMESTAMP_MILLIS(last_seen) BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY) AND CURRENT_TIMESTAMP() ORDER BY last_seen DESC LIMIT 25
    ),
    search_graph_ip AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, to_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE from_ver = @ioc_value AND edge_name = @ips
        ) WHERE TIMESTAMP_MILLIS(last_seen) BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY) AND CURRENT_TIMESTAMP() ORDER BY last_seen DESC LIMIT 25
    ),
    search_graph_vuln AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, to_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE from_ver = @ioc_value AND edge_name = @vulns
        ) WHERE TIMESTAMP_MILLIS(last_seen) BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY) AND CURRENT_TIMESTAMP() ORDER BY last_seen DESC LIMIT 25
    ),
    search_graph_industry AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, to_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE from_ver = @ioc_value AND edge_name = @industries
        ) ORDER BY last_seen DESC LIMIT 25
    ),
    search_graph_identity AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, to_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE from_ver = @ioc_value AND edge_name = @identities
        ) ORDER BY last_seen DESC 
    ),
    search_graph_geo AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, to_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE from_ver = @ioc_value AND edge_name = @geos
        ) ORDER BY last_seen DESC 
    ),
    search_graph_drop AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, to_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE from_ver = @ioc_value AND edge_name = @malware_drops
        ) ORDER BY last_seen DESC 
    ),
    search_graph_campaign AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, from_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE to_ver = @ioc_value AND edge_name = @campaigns
        ) ORDER BY last_seen DESC LIMIT 25
    ),
    search_graph_threatactor AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, from_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE to_ver = @ioc_value AND edge_name = @threatactors
        ) ORDER BY last_seen DESC LIMIT 25
    ),
    search_graph_hash AS (
        SELECT edge_name, from_ver, to_ver,to_type, last_seen,edge_total_seen FROM (
            SELECT edge_name, from_ver, to_ver,edge_total_seen, IF(edge_last_seen is not NULL, edge_last_seen, from_last_seen) AS last_seen, to_type, doc_url 
            FROM tls.edges WHERE to_ver = @ioc_value AND edge_name = @hashes
        ) WHERE TIMESTAMP_MILLIS(last_seen) BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 365 DAY) AND CURRENT_TIMESTAMP() ORDER BY last_seen DESC LIMIT 25
    ),
    search_mal_c2 AS (
        SELECT edge_name, edge_last_seen, IF(edge_total_seen is NOT NULL, edge_total_seen, 1) AS edge_total_seen, malware_ver FROM 
        (SELECT edge_name, edge_last_seen, edge_total_seen ,to_ver , from_ver AS malware_ver 
        FROM tls.edges WHERE to_ver = @ioc_value AND edge_name = @malware_c2 AND (used_as = 'C2' OR used_as = 'c&c')) e1 
        INNER JOIN (SELECT DISTINCT from_ver, to_ver FROM tls.edges WHERE edge_name = 'malware_has_label') AS e2 ON e1.malware_ver = e2.from_ver WHERE e2.to_ver = 'c&c'
    ),
    search_exploitkit_edge AS(
        SELECT edge_name, from_ver, edge_last_seen, IF(edge_total_seen is NOT NULL, edge_total_seen, 1) AS edge_total_seen FROM tls.edges AS e2 INNER JOIN
        (SELECT DISTINCT from_ver AS malware_ver FROM tls.edges WHERE edge_name = @exploitkit AND to_ver = @ioc_value) AS e1
        ON e2.from_ver = e1.malware_ver WHERE edge_name = 'malware_has_label' AND to_ver = 'exploitkit'
    )






    SELECT "urls" AS ioc_type, to_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_url GROUP BY to_ver

     UNION ALL 

    SELECT "fqdns" AS ioc_type, to_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_fqdn GROUP BY to_ver

     UNION ALL 

    SELECT "ips" AS ioc_type, to_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_ip GROUP BY to_ver

     UNION ALL 

    SELECT "vulns" AS ioc_type, to_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_vuln GROUP BY to_ver

     UNION ALL 
    SELECT "industries" AS ioc_type, to_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_industry GROUP BY to_ver



     UNION ALL 
    SELECT "identities" AS ioc_type, to_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_identity GROUP BY to_ver

     UNION ALL 
    SELECT "geos" AS ioc_type, to_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_geo GROUP BY to_ver

     UNION ALL 
    SELECT "malware_drops" AS ioc_type, to_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_drop GROUP BY to_ver


     UNION ALL 
    SELECT "campaigns" AS ioc_type, from_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_campaign GROUP BY from_ver

     UNION ALL 
    SELECT "threatactors" AS ioc_type, from_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_threatactor GROUP BY from_ver

     UNION ALL 

    SELECT "hashes" AS ioc_type, from_ver AS key,MAX(last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_graph_hash GROUP BY from_ver

     UNION ALL 

    SELECT "malware_c2" AS ioc_type, malware_ver AS key, MAX(edge_last_seen) AS last_seen, SUM(edge_total_seen) AS hits FROM search_mal_c2 GROUP BY malware_ver

     UNION ALL 

    SELECT "exploitkit" AS ioc_type, from_ver AS key, MAX(edge_last_seen) AS date, SUM(edge_total_seen) AS hits FROM search_exploitkit_edge GROUP BY from_ver
    
    UNION ALL 

    SELECT "c2_server" AS ioc_type, to_ver AS key, MAX(edge_last_seen) AS date, SUM(edge_total_seen) AS hits FROM
    (SELECT * FROM tls.edges WHERE edge_name = @c2_server AND from_ver = @ioc_value AND to_ver = 'C&C Server') GROUP BY to_ver

    UNION ALL 
    
    SELECT "attack_vector" AS ioc_type, to_ver AS key, MAX(last_seen) AS date, SUM(total_seen) AS hits FROM (
    SELECT edge_name, from_ver, to_ver, IF(edge_last_seen is NOT NULL, edge_first_seen, to_last_seen) AS last_seen, edge_total_seen AS total_seen 
    FROM tls.edges WHERE edge_name = @attack_vector AND from_ver = @attack_vector AND to_ver != 'C&C Server' ORDER BY last_seen DESC ) GROUP BY to_ver;
        



"""